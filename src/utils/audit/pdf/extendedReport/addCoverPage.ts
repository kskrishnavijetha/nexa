
import { jsPDF } from 'jspdf';
import { ComplianceReport } from '@/utils/types';
import { ReportConfig } from '@/components/audit/extended-report/types';

/**
 * Add cover page to the extended report
 */
export const addCoverPage = (
  doc: jsPDF,
  config: ReportConfig,
  report: ComplianceReport
): void => {
  // Set background color for a subtle gradient effect
  doc.setFillColor(245, 247, 250);
  doc.rect(0, 0, 210, 297, 'F');
  
  // Page margin
  const margin = 20;
  const pageWidth = 210 - margin * 2;
  
  // Add logo if provided
  if (config.logoUrl) {
    try {
      doc.addImage(
        config.logoUrl,
        'JPEG',
        margin,
        margin,
        50,
        30,
        undefined,
        'FAST'
      );
    } catch (e) {
      console.error('Error adding logo to PDF:', e);
    }
  }
  
  // Add report title
  doc.setFont('helvetica', 'bold');
  doc.setFontSize(24);
  doc.setTextColor(0, 51, 102);
  doc.text(
    config.reportTitle,
    105,
    120,
    { align: 'center' }
  );
  
  // Add organization name
  doc.setFontSize(20);
  doc.setTextColor(0, 0, 0);
  doc.text(
    config.organizationName,
    105,
    140,
    { align: 'center' }
  );
  
  // Add document name
  doc.setFont('helvetica', 'normal');
  doc.setFontSize(14);
  doc.setTextColor(80, 80, 80);
  doc.text(
    `Document: ${report.documentName}`,
    105,
    155,
    { align: 'center' }
  );
  
  // Add compliance types
  doc.setFontSize(12);
  const complianceText = config.complianceTypes.length > 0
    ? `Compliance Framework: ${config.complianceTypes.join(', ')}`
    : 'General Compliance Analysis';
  doc.text(
    complianceText,
    105,
    165,
    { align: 'center' }
  );
  
  // Add date and version
  const currentDate = new Date().toLocaleDateString();
  doc.setFontSize(12);
  doc.text(
    `Date: ${currentDate}`,
    105,
    180,
    { align: 'center' }
  );
  doc.text(
    `Version ${config.reportVersion}`,
    105,
    187,
    { align: 'center' }
  );
  
  // Add report generated by text
  doc.setFontSize(10);
  doc.setTextColor(100, 100, 100);
  doc.text(
    'Generated by NexaBloom AI Compliance Engine',
    105,
    270,
    { align: 'center' }
  );
  
  // Add page break
  doc.addPage();
};
